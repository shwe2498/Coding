/* Longest Substring with Distinct Characters
Problem Statement#
Given a string, find the length of the longest substring, which has all distinct characters.

Example 1:

Input: String="aabccbb"
Output: 3
Explanation: The longest substring with distinct characters is "abc".
Example 2:

Input: String="abbbb"
Output: 2
Explanation: The longest substring with distinct characters is "ab".
Example 3:

Input: String="abccde"
Output: 3
Explanation: Longest substrings with distinct characters are "abc" & "cde". "*/

using namespace std;

#include <iostream>
#include <string>
#include <unordered_map>

class NoRepeatSubstring {
 public:
  static int findLength(const string& str) {
    int maxLength = 0;
    int start = 0;
    unordered_map<char, int> m;
    for(int end = 0; end < str.size(); end++){
      if(m.find(str[end]) != m.end()){
        start = max(start, m[str[end]] + 1);
      }
      m[str[end]] = end;
      maxLength = max(maxLength, end - start + 1);
    }
    return maxLength;
  }
};
//TC : O(n) SC : O(k) or O(1)
